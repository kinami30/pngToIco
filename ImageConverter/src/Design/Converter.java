/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Design;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.KeyStroke;
import javax.swing.TransferHandler;
import net.sf.image4j.codec.ico.ICOEncoder;

/**
 *
 * @author Mamo
 */
public class Converter extends javax.swing.JFrame {

    int x;
    int y;
    int xMouse;
    int yMouse;
    int xMouseD;
    int yMouseD;
    File icoFile;

    /**
     * Creates new form Converter
     */
    public Converter() {
        initComponents();
        init();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogBox = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        textN = new javax.swing.JLabel();
        imagePath = new javax.swing.JLabel();
        textCTP = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        dialogBox.setMaximumSize(new java.awt.Dimension(510, 60));
        dialogBox.setMinimumSize(new java.awt.Dimension(510, 60));
        dialogBox.setUndecorated(true);
        dialogBox.setResizable(false);
        dialogBox.setSize(new java.awt.Dimension(510, 60));
        dialogBox.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                dialogBoxMouseDragged(evt);
            }
        });
        dialogBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dialogBoxMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dialogBoxMousePressed(evt);
            }
        });
        dialogBox.addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                dialogBoxWindowLostFocus(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setMaximumSize(new java.awt.Dimension(510, 60));
        jPanel2.setMinimumSize(new java.awt.Dimension(510, 60));

        textN.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        textN.setForeground(new java.awt.Color(255, 255, 255));
        textN.setText("Image saved to: ");

        imagePath.setForeground(new java.awt.Color(255, 255, 255));

        textCTP.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        textCTP.setForeground(new java.awt.Color(255, 255, 255));
        textCTP.setText("CLICK TO COPY PATH");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(imagePath, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(textN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textCTP)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textN)
                    .addComponent(textCTP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagePath, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout dialogBoxLayout = new javax.swing.GroupLayout(dialogBox.getContentPane());
        dialogBox.getContentPane().setLayout(dialogBoxLayout);
        dialogBoxLayout.setHorizontalGroup(
            dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        dialogBoxLayout.setVerticalGroup(
            dialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Image Converter");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(67, 67, 67));
        jPanel1.setMinimumSize(new java.awt.Dimension(263, 407));
        jPanel1.setPreferredSize(new java.awt.Dimension(263, 407));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Press ESC to quit");

        jLabel2.setBackground(new java.awt.Color(51, 0, 204));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Drag & drop image to convert");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Design/resources/images/background.gif"))); // NOI18N
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel2))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addGap(346, 346, 346)
                .addComponent(jLabel2))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void init() {
        closeOnEscape();
        displayWindow();
        acceptFiles();
        setLocationCenterFrame(this);
        // dialogBox.dispose();
        transparentBackground(this);
        transparentBackground(jPanel1);
    }

    private void transparentBackground(Component component) {
        component.setBackground(new Color(1.0f, 1.0f, 1.0f, 0.0f));
    }

    private void setLocationCenterComponent(Component component) {
        component.setLocation(x - xMouse, y - yMouse);
    }

    private void setLocationCenterFrame(JFrame frame) {
        frame.setLocationRelativeTo(null);
    }

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        x = evt.getXOnScreen();
        y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void dialogBoxWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_dialogBoxWindowLostFocus
        dialogBox.dispose();
    }//GEN-LAST:event_dialogBoxWindowLostFocus

    private void dialogBoxMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dialogBoxMouseDragged
        int xd = evt.getXOnScreen();
        int yd = evt.getYOnScreen();
        dialogBox.setLocation(xd - xMouseD, yd - yMouseD);
    }//GEN-LAST:event_dialogBoxMouseDragged

    private void dialogBoxMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dialogBoxMousePressed
        xMouseD = evt.getX();
        yMouseD = evt.getY();
    }//GEN-LAST:event_dialogBoxMousePressed

    private void dialogBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dialogBoxMouseClicked
        String text = imagePath.getText();
        StringSelection strSelection = new StringSelection(text);
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(strSelection, null);
    }//GEN-LAST:event_dialogBoxMouseClicked

    /**
     * Method that accept dragged png image and convert it to ico
     */
    public void acceptFiles() {
        TransferHandler transferHandler = new TransferHandler() {
            @Override
            public boolean canImport(JComponent comp, DataFlavor[] transFlavors) {
                return true;
            }

            @Override
            public boolean importData(JComponent comp, Transferable t) {
                try {
                    List<File> files = (List<File>) t.getTransferData(DataFlavor.javaFileListFlavor);
                    String icoImagePath;
                    String extension = "ico";
                    String icoImagePathNoName;
                    for (File file : files) {
                        icoImagePath = file.getPath().substring(0, file.getPath().length() - 3) + extension;
                        icoFile = new File(icoImagePath);
                        pngToIco(file, icoFile);
                        dialogBox.setVisible(true);
                        dialogBox.setLocation(getLocation());
                        icoImagePathNoName = icoFile.getAbsoluteFile().getParent();
                        imagePath.setText(icoImagePathNoName);
                    }
                } catch (UnsupportedFlavorException | IOException ex) {
                    //do nothing
                }
                return true;
            }
        };
        jPanel1.setTransferHandler(transferHandler);
    }

    /**
     * Method that disable default window style
     */
    public void displayWindow() {
        this.dispose();
        this.setUndecorated(true);
        this.setVisible(true);
    }

    /**
     * Method that close window at ESC key input
     */
    public void closeOnEscape() {
        getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "Cancel");
        getRootPane().getActionMap().put("Cancel", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
        });
    }

    /**
     * Convert a PNG image to ICO image
     *
     * @param pngImage Png image to convert
     * @param icoImage Ico image to be converted
     */
    public void pngToIco(File pngImage, File icoImage) {
        try {
            BufferedImage pngBuffer = ImageIO.read(pngImage);
            BufferedImage icoBuffer = new BufferedImage(pngBuffer.getWidth(), pngBuffer.getHeight(),
                    BufferedImage.TYPE_INT_RGB);
            ICOEncoder.write(pngBuffer, icoImage);
        } catch (IOException ex) {
            //do nothing
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Converter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame dialogBox;
    private javax.swing.JLabel imagePath;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel textCTP;
    private javax.swing.JLabel textN;
    // End of variables declaration//GEN-END:variables
}
